<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:component-scan use-default-filters="false" base-package="com.sparc.knappsack.components">
        <context:include-filter type="assignable"
                                expression="com.sparc.knappsack.components.entities.StorageConfiguration"/>
    </context:component-scan>
    <context:component-scan base-package="com.sparc.knappsack.components.dao"/>

    <context:property-placeholder location="classpath:properties/test-jdbc.properties" ignore-unresolvable="true"/>

    <!--TO TEST WITH FLYWAY-->
    <!--<beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="flyway"-->
                <!--p:packagesToScan="com.sparc.knappsack.components.entities"-->
                <!--p:jpaDialect-ref="jpaDialect"-->
                <!--p:dataSource-ref="dataSource"-->
                <!--p:jpaVendorAdapter-ref="jpaVendorAdapter"-->
                <!--p:persistenceUnitName="ComposerJPA"-->
                <!--p:jpaPropertyMap-ref="jpaPropertyMap"/>-->

    <!--<beans:bean id="flyway" class="com.googlecode.flyway.core.Flyway" init-method="migrate">-->
        <!--<beans:property name="dataSource" ref="dataSource"/>-->
    <!--</beans:bean>-->

    <!--<util:map id="jpaPropertyMap">-->
        <!--<beans:entry key="hibernate.hbm2ddl.auto" value="none"/>-->
        <!--<beans:entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>-->
        <!--<beans:entry key="hibernate.show_sql" value="false"/>-->
        <!--<beans:entry key="hibernate.cache.use_second_level_cache" value="true"/>-->
        <!--<beans:entry key="hibernate.cache.use_query_cache" value="true"/>-->
        <!--<beans:entry key="hibernate.cache.region.factory_class" value="com.sparc.knappsack.components.cache.KnappsackIntegrationTestCacheRegionFactory"/>-->
    <!--</util:map>-->
    <!--END TO TEST WITH FLYWAY-->

    <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
                p:packagesToScan="com.sparc.knappsack.components.entities"
                p:jpaDialect-ref="jpaDialect"
                p:dataSource-ref="dataSource"
                p:jpaVendorAdapter-ref="jpaVendorAdapter"
                p:persistenceUnitName="ComposerJPA"
                p:jpaPropertyMap-ref="jpaPropertyMap"/>

    <util:map id="jpaPropertyMap">
        <beans:entry key="hibernate.hbm2ddl.auto" value="create-drop"/>
        <beans:entry key="hibernate.dialect" value="org.hibernate.dialect.HSQLDialect"/>
        <beans:entry key="hibernate.show_sql" value="false"/>
        <beans:entry key="hibernate.cache.use_second_level_cache" value="true"/>
        <beans:entry key="hibernate.cache.use_query_cache" value="true"/>
        <beans:entry key="hibernate.cache.region.factory_class" value="com.sparc.knappsack.components.cache.KnappsackIntegrationTestCacheRegionFactory"/>
    </util:map>

    <beans:bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                p:showSql="false"/>

    <beans:bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>

    <!-- Declare a datasource that has pooling capabilities-->
    <beans:bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <beans:property name="driverClass" value="${test.jdbc.driverClassName}" />
        <beans:property name="jdbcUrl" value="${test.jdbc.url}" />
        <beans:property name="idleConnectionTestPeriod" value="60"/>
        <beans:property name="idleMaxAge" value="240"/>
        <beans:property name="maxConnectionsPerPartition" value="30"/>
        <beans:property name="minConnectionsPerPartition" value="10"/>
        <beans:property name="partitionCount" value="3"/>
        <beans:property name="acquireIncrement" value="5"/>
        <beans:property name="statementsCacheSize" value="100"/>
        <beans:property name="releaseHelperThreads" value="3"/>
    </beans:bean>

    <beans:bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="entityManagerFactory" ref="entityManagerFactory"/>
        <beans:property name="jpaDialect" ref="jpaDialect"/>
    </beans:bean>

    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>

</beans:beans>